pipeline {
  agent any
  stages {
    stage('Unit Test') {
      steps {
        sh 'mvn clean test'
      }
    }
    stage('Deploy Standalone') {
      steps {
        sh 'mvn deploy -P standalone'
      }
    }
    stage('Deploy AnyPoint') {
      environment {
        ANYPOINT_CREDENTIALS = credentials('anypoint.credentials')
      }
      steps {
        sh 'mvn deploy -P arm -Darm.target.name=local-4.0.0-ee -Danypoint.username=${ANYPOINT_CREDENTIALS_USR}  -Danypoint.password=${ANYPOINT_CREDENTIALS_PSW}'
      }
    }
    stage('Deploy CloudHub') {
      environment {
        ANYPOINT_CREDENTIALS = credentials('anypoint.credentials')
      }
      steps {
        sh 'mvn deploy -P cloudhub -Dmule.version=4.0.0 -Danypoint.username=${ANYPOINT_CREDENTIALS_USR} -Danypoint.password=${ANYPOINT_CREDENTIALS_PSW}'
      }
    }
  }
}
pipeline {
  agent any
  stages {
    stage('build sin test') {
      steps {
        nodejs(nodeJSInstallationName: 'nodejs') {
          sh 'npm install'
          sh 'npm rebuild'
          sh 'npm run build --skip-test --if-present'
          // stash name: "ws", includes: "**"
        }
      }
    }
    stage('unitTest') {
      steps {
        //unstash "ws"
        nodejs(nodeJSInstallationName: 'nodejs') {
          sh 'npm run test:coverage && cp coverage/lcov.info lcov.info || echo "Code
          coverage failed "'
          archiveArtifacts(artifacts: 'coverage/**', onlyIfSuccessful: true)
        }
      }
    }
    stage('deploy') {
      steps {
        nodejs(nodeJSInstallationName: 'nodejs') {
          withAWS(credentials: 'aws-credentials') {
            sh 'serverless deploy'
          }
        }
      }
    }
  }
}